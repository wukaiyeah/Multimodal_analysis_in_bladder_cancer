install.packages("lavaan")
install.packages("semPlot")
install.packages('lavaan',dependencies = TRUE)
install.packages('lavaan',dependencies = TRUE)
install.packages("tmvnsim")
install.packages("tmvnsim",INSTALL_opts = c('--no-lock'))
install.packages("tmvnsim",INSTALL_opts = c('--no-lock'))
library("lavaan")
install.packages("lavaan")
install.packages("lavaan")
install.packages("lavaan")
install.packages("lavaan",dependencies = TRUE)
install.packages("lavaan",dependencies = TRUE)
install.packages("lavaan")
install.packages("lavaan")
install.packages("lavaan")
install.packages("~/Downloads/tmvnsim_1.0-2.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/mnormt_2.0.2.tar.gz", repos = NULL, type = "source")
install.packages("lavaan")
install.packages("~/Downloads/lavaan_0.6-8.tar.gz", repos = NULL, type = "source")
# path analysis example
library("lavaan")
library('semPlot')
install.packages("semPlot")
install.packages("yaml")
install.packages("yaml")
install.packages("yaml")
install.packages("yaml")
install.packages("semPlot")
install.packages("latticeExtra")
install.packages("~/Downloads/latticeExtra_0.6-29.tar.gz", repos = NULL, type = "source")
install.packages("png")
install.packages("png")
install.packages("jpeg")
install.packages("jpeg")
install.packages("~/Downloads/latticeExtra_0.6-29.tar.gz", repos = NULL, type = "source")
setwd('/media/wukai/AI_Team_03/Bladder_project/Genome')
# load tpm datatable
datatable = read.csv('blac_luminal_basal_gene_tpm.csv', sep = ',', header = TRUE, row.names = 1)
datatable
datatable = datatable[,-2]
datatable
colnames(datatable) = gsub('\\.', '-', colnames(datatable))
datatable
library('tabble')
library('tibble')
datatable = column_to_rownames(datatable,var = 'Gene_name')
colnames(datatable) = NA
datatable
# load tpm datatable
datatable = read.csv('blac_luminal_basal_gene_tpm.csv', sep = ',', header = TRUE)
datatable
datatable = datatable[,-c(1,3)]
datatable
colnames(datatable) = gsub('\\.', '-', colnames(datatable))
datatable = column_to_rownames(datatable,var = 'Gene_name')
datatable
pheatmap(datatable,
center = 'row')
library('pheatmap')
pheatmap(datatable,
center = 'row')
?pheatmap
pheatmap(datatable,
scale  = 'row')
pheatmap(datatable,
scale  = 'column')
pheatmap(datatable,
scale  = 'row')
pheatmap(datatable,
scale  = 'row',
cluster_rows = FALSE,
cluster_cols = TRUE)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
library('colorRampPalette')
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
library('pheatmap')
library('tibble')
setwd('/media/wukai/AI_Team_03/Bladder_project/Genome')
# load tpm datatable
datatable = read.csv('total_luminal_basal_gene_tpm.csv', sep = ',', header = TRUE)
datatable
datatable = datatable[,-c(1,3)]
colnames(datatable) = gsub('\\.', '-', colnames(datatable))
datatable = column_to_rownames(datatable,var = 'Gene_name')
datatable
datatable[which(rownames(datatable) != 'XBP1'),]
row.names(datatable)
datatable = datatable[which(rownames(datatable) != 'XBP1'),]
row.names(datatable)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
pdf('test.pdf', 12, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
dev.off()
pdf('test.pdf', 12, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
pdf('test.pdf', 50, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
datatable = datatable[,which(colnames(datatable) != 'TCGA-DK-A3IS'|'TCGA-FD-A3N5')]
datatable = datatable[,which(colnames(datatable) != 'TCGA-DK-A3IS'|colnames(datatable) != 'TCGA-DK-A3IS''TCGA-FD-A3N5')]
datatable = datatable[,which(colnames(datatable) != 'TCGA-DK-A3IS'|colnames(datatable) != 'TCGA-FD-A3N5')]
pdf('test.pdf', 30, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
datatable = datatable[,which(colnames(datatable) != 'TCGA-DK-A31S'|colnames(datatable) != 'TCGA-FD-A3N5')]
pdf('test.pdf', 30, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
dev.off()
datatable = datatable[,which(colnames(datatable) != 'TCGA-DK-A31S'|colnames(datatable) != 'TCGA-FD-A3N5')]
pdf('test.pdf', 30, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
colnames(datatable)
datatable = datatable[,grep('TCGA-DK-A31S', colnames(datatable),invert = TRUE)]
datatable = datatable[,grep('TCGA-FD-A3N5', colnames(datatable),invert = TRUE)]
pdf('test.pdf', 30, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
pdf('test.pdf', 50, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
datatable = datatable[,grep('TCGA-DK-A3IS', colnames(datatable),invert = TRUE)]
colnames(datatable)
pdf('test.pdf', 50, 3)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
pdf('test.pdf', 50, 8)
pheatmap(datatable,
scale  = 'row',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
datatable = t(datatable)
pdf('test.pdf', 8, 50)
pheatmap(datatable,
scale  = 'column',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = FALSE,
cluster_cols = TRUE)
dev.off()
pdf('test.pdf', 8, 50)
pheatmap(datatable,
scale  = 'column',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = TRUE,
cluster_cols = TRUE)
dev.off()
datatable = datatable[,grep('TCGA−XF−A9SX', colnames(datatable),invert = TRUE)]
datatable = datatable[,grep('TCGA−XF−A9T2', colnames(datatable),invert = TRUE)]
datatable = t(datatable)
pdf('test.pdf', 8, 50)
pheatmap(datatable,
scale  = 'column',
color = colorRampPalette(colors = c("blue","white","red"))(100),
cluster_rows = TRUE,
cluster_cols = TRUE)
# load tpm datatable
datatable = read.csv('total_luminal_basal_gene_tpm.csv', sep = ',', header = TRUE)
datatable = datatable[,-c(1,3)]
colnames(datatable) = gsub('\\.', '-', colnames(datatable))
datatable = column_to_rownames(datatable,var = 'Gene_name')
datatable = datatable[which(rownames(datatable) != 'XBP1'),]
datatable = datatable[,grep('TCGA-DK-A3IS', colnames(datatable),invert = TRUE)]
datatable = datatable[,grep('TCGA-FD-A3N5', colnames(datatable),invert = TRUE)]
datatable = datatable[,grep('TCGA−XF−A9SX', colnames(datatable),invert = TRUE)]
datatable = datatable[,grep('TCGA−XF−A9T2', colnames(datatable),invert = TRUE)]
datatable = t(datatable)
pdf('test.pdf', 8, 50)
dev.off()
source('/media/wukai/AI_Team_03/Bladder_project/Genome/script/4_molecular_phenotypes_of_lumincal_and_basal.r')
dev.off()
source('/media/wukai/AI_Team_03/Bladder_project/Genome/script/4_molecular_phenotypes_of_lumincal_and_basal.r')
source('/media/wukai/AI_Team_03/Bladder_project/Genome/script/4_molecular_phenotypes_of_lumincal_and_basal.r')
