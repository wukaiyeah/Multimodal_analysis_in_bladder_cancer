source('F:/Bladder_project/FeatureAssociations/script/4.enrichment_analysis_in_block1.r')
source('F:/Bladder_project/FeatureAssociations/script/4.enrichment_analysis_in_block1.r')
source('F:/Bladder_project/FeatureAssociations/script/4.enrichment_analysis_in_block1.r')
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
library('latex2exp')
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
#
auc_text <- data.frame(x = 0.70, y = 0.14, text = TeX('ROC curve (Area =  0.95 $\\pm$ 0.09)'))
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
source('F:/Bladder_project/mol_subtype_classify/script_plot/mol_classify_roc.r')
#!/usr/bin/R
##---This script aims to conduct survival analysis
##--packages preparation
# install.packages('survival')
library('survival')
# BiocManager::install('survminer')
library('survminer') # for drawing
library('dplyr')
library('tibble')
library('latex2exp')
##--environment setting
setwd("F:/Bladder_project/cox_survival")
##--load  data table
feature_table <- read.csv('activated_features_with_clinical_info.csv', header = TRUE, row.names =1 , sep = ',')
coxres = read.csv('overall_cox_res.csv', header = TRUE, sep = ',')
colnames(coxres)[1] = 'feature'
feature_name = coxres$feature[14]
surv.table <-cbind(feature_table[,275:276], feature_table[feature_name])
colnames(surv.table)[3] <- 'feature'
surv.table <- surv.table[order(surv.table$feature, decreasing = FALSE),]
# make level table
case.num <-nrow(surv.table)
level.table <- data.frame(level_1 = c(rep('low', 1), rep('high', case.num-1)))
for(i in 2:(case.num-1)){
level.table <- cbind(level.table, c(rep('low', i), rep('high', case.num-i)))
}
colnames(level.table) <- paste('level', 1:(case.num-1), sep ='_')
# auto-find the perfect cutoff
time <- surv.table$Overall_survival_months
event <- c()
event[which(surv.table$Overall_survival_status == 'LIVING')] = 1
event[which(surv.table$Overall_survival_status == 'DECEASED')] = 2
event = as.numeric(event)
surv.table <- cbind(surv.table, level.table)
log.rank.pval.list <- c()
for (level in colnames(level.table)){
sfit <- survfit(as.formula(paste('Surv(time = time, event = event) ~', level)), data = surv.table)
p.value <- round(surv_pvalue(sfit)$pval, digits = 4)
log.rank.pval.list <- append(log.rank.pval.list, p.value)
}
names(log.rank.pval.list) <- colnames(level.table)
level.sig <- log.rank.pval.list[which(log.rank.pval.list < 0.05)]
print(level.sig)
feature_name = coxres$feature[4]
surv.table <-cbind(feature_table[,275:276], feature_table[feature_name])
colnames(surv.table)[3] <- 'feature'
surv.table <- surv.table[order(surv.table$feature, decreasing = FALSE),]
# make level table
case.num <-nrow(surv.table)
level.table <- data.frame(level_1 = c(rep('low', 1), rep('high', case.num-1)))
for(i in 2:(case.num-1)){
level.table <- cbind(level.table, c(rep('low', i), rep('high', case.num-i)))
}
colnames(level.table) <- paste('level', 1:(case.num-1), sep ='_')
# auto-find the perfect cutoff
time <- surv.table$Overall_survival_months
event <- c()
event[which(surv.table$Overall_survival_status == 'LIVING')] = 1
event[which(surv.table$Overall_survival_status == 'DECEASED')] = 2
event = as.numeric(event)
surv.table <- cbind(surv.table, level.table)
log.rank.pval.list <- c()
for (level in colnames(level.table)){
sfit <- survfit(as.formula(paste('Surv(time = time, event = event) ~', level)), data = surv.table)
p.value <- round(surv_pvalue(sfit)$pval, digits = 4)
log.rank.pval.list <- append(log.rank.pval.list, p.value)
}
names(log.rank.pval.list) <- colnames(level.table)
level.sig <- log.rank.pval.list[which(log.rank.pval.list < 0.05)]
print(level.sig)
96/2
source('F:/Bladder_project/cox_survival/script/kmplot_analysis.r')
